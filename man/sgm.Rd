% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sgm.R
\name{sgm}
\alias{sgm}
\title{Matches Graphs given a seeding of vertex correspondences.}
\usage{
sgm(A, B, seeds, hard = TRUE, pad = 0, start = "barycenter",
  maxiter = 20)
}
\arguments{
\item{A}{a numeric matrix, the \eqn{n \times n}{n*n} adjacency matrix of the first graph}

\item{B}{a numeric matrix, the \eqn{n \times n}{n*n} adjacency matrix of the second graph}

\item{seeds}{a numeric matrix, the \eqn{m \times 2}{m*2} matching vertex table.
If \code{S} is \code{NULL}, then it is using a \eqn{soft} seeding algorithm.}

\item{hard}{a boolean, TRUE for hard seeding, FALSE for soft seeding.}

\item{pad}{a scalar value for padding.}

\item{start}{?}

\item{maxiter}{The number of maxiters for the Frank-Wolfe algorithm.}
}
\value{
A numeric matrix which is the permutation matrix that determines the
bijection between the graphs of \code{A} and \code{B}
}
\description{
Given two adjacency matrices \code{A} and \code{B} of the same size, match
the two graphs with the help of \code{m} seed vertex pairs which correspond
to \code{m} rows (and columns) of the adjacency matrices.
}
\details{
The approximate graph matching problem is to find a bijection between the
vertices of two graphs, such that the number of edge disagreements between
the corresponding vertex pairs is minimized. For seeded graph matching, part
of the bijection that consists of known correspondences (the seeds) is known
and the problem task is to complete the bijection by estimating the
permutation matrix that permutes the rows and columns of the adjacency
matrix of the second graph.

It is assumed that for the two supplied adjacency matrices \code{A} and
\code{B}, both of size \eqn{n\times n}{n*n}, the first \eqn{m} rows(and
columns) of \code{A} and \code{B} correspond to the same vertices in both
graphs. That is, the \eqn{n \times n}{n*n} permutation matrix that defines
the bijection is \eqn{I_{m} \bigoplus P} for a \eqn{(n-m)\times
(n-m)}{(n-m)*(n-m)} permutation matrix \eqn{P} and \eqn{m} times \eqn{m}
identity matrix \eqn{I_{m}}. The function \code{match_vertices} estimates
the permutation matrix \eqn{P} via an optimization algorithm based on the
Frank-Wolfe algorithm.

See references for further details.
}
\references{
Vogelstein, J. T., Conroy, J. M., Podrazik, L. J., Kratzer, S.
G., Harley, E. T., Fishkind, D. E.,Vogelstein, R. J., Priebe, C. E. (2011).
Fast Approximate Quadratic Programming for Large (Brain) Graph Matching.
Online: \url{http://arxiv.org/abs/1112.5507}

Fishkind, D. E., Adali, S., Priebe, C. E. (2012). Seeded Graph Matching
Online: \url{http://arxiv.org/abs/1209.0367}
}
\author{
Vince Lyzinski \url{http://www.ams.jhu.edu/~lyzinski/}
}
